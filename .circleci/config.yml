# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/

    working_directory: ~/reactive

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - run:
          name: Decrpyt Secrets
          command: openssl enc -d -aes-256-ecb -md md5 -in src/main/resources/application.properties.secrets -out src/main/resources/application.properties -k $PROPERTY_SECRET_KEY

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests
      - run: gradle clean build

      # copy deployment artifacts
      - run:
          name: Copy deployment artifacts to workspace
          command: |
            cp build/libs/reactive-*.jar /tmp/reactive.jar
            cp .circleci/setup-heroku.sh /tmp/setup-heroku.sh

      # store in workspace
      - persist_to_workspace:
                root: /tmp
                paths:
                  - reactive.jar
                  - setup-heroku.sh
            
  deploy-heroku:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    working_directory: ~/deploy
    environment:
      HEROKU_APP: "reactiveservertemplate"
    steps:
      - checkout

      - attach_workspace:
          at: /tmp

      - run:
          name: Run setup script
          command: bash /tmp/setup-heroku.sh

      - run:
          name: Heroku Deploy
          command: |
            cp /tmp/reactive.jar .
            ls -la
            heroku plugins:install heroku-cli-deploy
            heroku deploy:jar reactive.jar --app $HEROKU_APP_NAME



workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-heroku:
          requires:
            - build
          filters:
            branches:
              only:
                - main